Traceback (most recent call last):
  File "C:\Users\savan\AppData\Roaming\Python\Python311\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\savan\AppData\Roaming\Python\Python311\site-packages\nbclient\client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\savan\AppData\Roaming\Python\Python311\site-packages\jupyter_core\utils\__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Program Files\Python311\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\savan\AppData\Roaming\Python\Python311\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "C:\Users\savan\AppData\Roaming\Python\Python311\site-packages\nbclient\client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\savan\AppData\Roaming\Python\Python311\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd
from IPython.display import Markdown, display

# Load the Excel file
excel_file = 'Power sector table.xlsx'

# Load the specified sheet
sheet_name = 'Sheet1'
data_range = 'C6:R33'

# Read data from Excel
df = pd.read_excel(excel_file, sheet_name=sheet_name, header=None, usecols="C:R", skiprows=5, nrows=27)

#for merged cells aka multi-index: https://pandas.pydata.org/pandas-docs/stable/user_guide/style.html
# Assign column names
df.columns = ['Technology', 'Installed Capacity (GW) - 2020', 'Installed Capacity (GW) - 2021', 
              'Installed Capacity (GW) - 2022', 'Source', 'Efficiency (%)', 'Source', 'Variable Cost (R/GJ)',
              'Variable Cost (R/kW)','Source', 'Fixed Cost (%) - 2020','Fixed Cost (%) - 2025',
              'Source', 'Annual Availability (%) - 2030', 'Annual Availability (%) - 2035','Source']

# Set 'C' column as the index
df.set_index('Technology', inplace=True)

# Drop columns titled 'Source'
df = df.drop(columns=['Source'])

# Define the clickable source link
source_link_text = '[PCC (2022). South Africaâ€™s Just Energy Transition Investment Plan 2023-2027.]'
source_link_url = 'https://pccommissionflo.imgix.net/uploads/images/South-Africas-Just-Energy-Transition-Investment-Plan-JET-IP-2023-2027-FINAL.pdf'

# Remove empty rows
#df = df.dropna()

# Define CSS styles for the table
table_styles = [
    dict(selector="th", props=[("font-size", "14px"), ("text-align", "left"), ("background-color", "#f2f2f2"), ("padding", "8px")]),
    dict(selector="td", props=[("font-size", "14px"), ("text-align", "left"), ("padding", "8px")]),
    dict(selector="tr:hover", props=[("background-color", "#f5f5f5")]),
]

# Apply CSS styles to the HTML table
styled_table = df.style.set_table_styles(table_styles)

# Define table header
table_header = "### Table 1: Characteristics of Existing Electricity Generation Plants in SATIM\n #### All Rand values are in April 2023 Rands." #Table Header (Markdown format)

# Define caption with clickable source link
table_caption = f"\n\n**Data Source:** {source_link_text} - [Click me]({source_link_url})"

# Display table header
display(Markdown(table_header))

# Display the styled table with the caption
display(styled_table)

# Display the table caption
display(Markdown(table_caption))

------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mFileNotFoundError[0m                         Traceback (most recent call last)
Cell [1;32mIn[1], line 12[0m
[0;32m      9[0m data_range [38;5;241m=[39m [38;5;124m'[39m[38;5;124mC6:R33[39m[38;5;124m'[39m
[0;32m     11[0m [38;5;66;03m# Read data from Excel[39;00m
[1;32m---> 12[0m df [38;5;241m=[39m [43mpd[49m[38;5;241;43m.[39;49m[43mread_excel[49m[43m([49m[43mexcel_file[49m[43m,[49m[43m [49m[43msheet_name[49m[38;5;241;43m=[39;49m[43msheet_name[49m[43m,[49m[43m [49m[43mheader[49m[38;5;241;43m=[39;49m[38;5;28;43;01mNone[39;49;00m[43m,[49m[43m [49m[43musecols[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mC:R[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mskiprows[49m[38;5;241;43m=[39;49m[38;5;241;43m5[39;49m[43m,[49m[43m [49m[43mnrows[49m[38;5;241;43m=[39;49m[38;5;241;43m27[39;49m[43m)[49m
[0;32m     14[0m [38;5;66;03m#for merged cells aka multi-index: https://pandas.pydata.org/pandas-docs/stable/user_guide/style.html[39;00m
[0;32m     15[0m [38;5;66;03m# Assign column names[39;00m
[0;32m     16[0m df[38;5;241m.[39mcolumns [38;5;241m=[39m [[38;5;124m'[39m[38;5;124mTechnology[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mInstalled Capacity (GW) - 2020[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mInstalled Capacity (GW) - 2021[39m[38;5;124m'[39m, 
[0;32m     17[0m               [38;5;124m'[39m[38;5;124mInstalled Capacity (GW) - 2022[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mSource[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mEfficiency ([39m[38;5;124m%[39m[38;5;124m)[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mSource[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mVariable Cost (R/GJ)[39m[38;5;124m'[39m,
[0;32m     18[0m               [38;5;124m'[39m[38;5;124mVariable Cost (R/kW)[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mSource[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mFixed Cost ([39m[38;5;124m%[39m[38;5;124m) - 2020[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mFixed Cost ([39m[38;5;124m%[39m[38;5;124m) - 2025[39m[38;5;124m'[39m,
[0;32m     19[0m               [38;5;124m'[39m[38;5;124mSource[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mAnnual Availability ([39m[38;5;124m%[39m[38;5;124m) - 2030[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124mAnnual Availability ([39m[38;5;124m%[39m[38;5;124m) - 2035[39m[38;5;124m'[39m,[38;5;124m'[39m[38;5;124mSource[39m[38;5;124m'[39m]

File [1;32m~\AppData\Roaming\Python\Python311\site-packages\pandas\io\excel\_base.py:504[0m, in [0;36mread_excel[1;34m(io, sheet_name, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, parse_dates, date_parser, date_format, thousands, decimal, comment, skipfooter, storage_options, dtype_backend, engine_kwargs)[0m
[0;32m    502[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(io, ExcelFile):
[0;32m    503[0m     should_close [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[1;32m--> 504[0m     io [38;5;241m=[39m [43mExcelFile[49m[43m([49m
[0;32m    505[0m [43m        [49m[43mio[49m[43m,[49m
[0;32m    506[0m [43m        [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m
[0;32m    507[0m [43m        [49m[43mengine[49m[38;5;241;43m=[39;49m[43mengine[49m[43m,[49m
[0;32m    508[0m [43m        [49m[43mengine_kwargs[49m[38;5;241;43m=[39;49m[43mengine_kwargs[49m[43m,[49m
[0;32m    509[0m [43m    [49m[43m)[49m
[0;32m    510[0m [38;5;28;01melif[39;00m engine [38;5;129;01mand[39;00m engine [38;5;241m!=[39m io[38;5;241m.[39mengine:
[0;32m    511[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[0;32m    512[0m         [38;5;124m"[39m[38;5;124mEngine should not be specified when passing [39m[38;5;124m"[39m
[0;32m    513[0m         [38;5;124m"[39m[38;5;124man ExcelFile - ExcelFile already has the engine set[39m[38;5;124m"[39m
[0;32m    514[0m     )

File [1;32m~\AppData\Roaming\Python\Python311\site-packages\pandas\io\excel\_base.py:1563[0m, in [0;36mExcelFile.__init__[1;34m(self, path_or_buffer, engine, storage_options, engine_kwargs)[0m
[0;32m   1561[0m     ext [38;5;241m=[39m [38;5;124m"[39m[38;5;124mxls[39m[38;5;124m"[39m
[0;32m   1562[0m [38;5;28;01melse[39;00m:
[1;32m-> 1563[0m     ext [38;5;241m=[39m [43minspect_excel_format[49m[43m([49m
[0;32m   1564[0m [43m        [49m[43mcontent_or_path[49m[38;5;241;43m=[39;49m[43mpath_or_buffer[49m[43m,[49m[43m [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m
[0;32m   1565[0m [43m    [49m[43m)[49m
[0;32m   1566[0m     [38;5;28;01mif[39;00m ext [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m   1567[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[0;32m   1568[0m             [38;5;124m"[39m[38;5;124mExcel file format cannot be determined, you must specify [39m[38;5;124m"[39m
[0;32m   1569[0m             [38;5;124m"[39m[38;5;124man engine manually.[39m[38;5;124m"[39m
[0;32m   1570[0m         )

File [1;32m~\AppData\Roaming\Python\Python311\site-packages\pandas\io\excel\_base.py:1419[0m, in [0;36minspect_excel_format[1;34m(content_or_path, storage_options)[0m
[0;32m   1416[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(content_or_path, [38;5;28mbytes[39m):
[0;32m   1417[0m     content_or_path [38;5;241m=[39m BytesIO(content_or_path)
[1;32m-> 1419[0m [38;5;28;01mwith[39;00m [43mget_handle[49m[43m([49m
[0;32m   1420[0m [43m    [49m[43mcontent_or_path[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mrb[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m[43m [49m[43mis_text[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m
[0;32m   1421[0m [43m[49m[43m)[49m [38;5;28;01mas[39;00m handle:
[0;32m   1422[0m     stream [38;5;241m=[39m handle[38;5;241m.[39mhandle
[0;32m   1423[0m     stream[38;5;241m.[39mseek([38;5;241m0[39m)

File [1;32m~\AppData\Roaming\Python\Python311\site-packages\pandas\io\common.py:872[0m, in [0;36mget_handle[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)[0m
[0;32m    863[0m         handle [38;5;241m=[39m [38;5;28mopen[39m(
[0;32m    864[0m             handle,
[0;32m    865[0m             ioargs[38;5;241m.[39mmode,
[1;32m   (...)[0m
[0;32m    868[0m             newline[38;5;241m=[39m[38;5;124m"[39m[38;5;124m"[39m,
[0;32m    869[0m         )
[0;32m    870[0m     [38;5;28;01melse[39;00m:
[0;32m    871[0m         [38;5;66;03m# Binary mode[39;00m
[1;32m--> 872[0m         handle [38;5;241m=[39m [38;5;28;43mopen[39;49m[43m([49m[43mhandle[49m[43m,[49m[43m [49m[43mioargs[49m[38;5;241;43m.[39;49m[43mmode[49m[43m)[49m
[0;32m    873[0m     handles[38;5;241m.[39mappend(handle)
[0;32m    875[0m [38;5;66;03m# Convert BytesIO or file objects passed with an encoding[39;00m

[1;31mFileNotFoundError[0m: [Errno 2] No such file or directory: 'Power sector table.xlsx'

